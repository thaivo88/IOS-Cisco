//r router
//s switch
//> user mode
//# enable mode (privileged mode; EXEC command)
//(config)# global config mode
//(config-if)# interface mode
//(config-line)# line mode

//create a vlan on a switch
//must be in global config mode (config t = configure terminal)
//[#] = vlan ID number
s(config)# vlan[#] 

//create subinterface vlan on router
//[#1] = the interface port number 
//[#2] = vlan ID number
//encapsulation add the 802.1Q protocol adding vlan flag ID
r(config)# interface gi[#1]/[#1].[#2]
r(config-subif)# encapsulation dot1q [#2]
r(config-subif)# ip address xx.xx.xx.xx xx.xx.xx.xx
//or
//native does not add an 802.1Q header when forwarding frames out this subinterface
r(config)# interface gi[#1]/[#1].[#2]
r(config-subif)# encapsulation dot1q [#2] native
r(config-subif)# ip address xx.xx.xx.xx xx.xx.xx.xx

//name a vlan
//after creating a vlan
(config-vlan)# name [input name]

//assign a switchport to a vlan on a switch
//must be in global config mode
//[#] = vlan ID number
//fa for fast ethernet or gi for Gigiabit 
//#/# is the interface port number example 0/1
s(config)# int fa#/# 
s(config-if)# switchport mode access
s(config-if)# switchport access vlan [#]

//making the interface a trunk port
//fa or gi
(config)# interface fa#/#
(config-if)# switchport mode trunk

//display vlan information about an interface
(config)# show int switchport

//view ports in a vlan
//[#] = vlan ID number
# show int vlan [#]

//adding a shared password to console connection
(config)# line console 0
(config-line)# login
(config-line)# password [password]

//adding shared password for telnet (vty)
(config)# line vty 0 15
(config-line)# login
(config-line)# password [password]

//adding local username and password to console connection
(config)# line console 0
(config-line)# login local
(config-line)# username [username] secret [password]

//adding local username and password to telnet (vty)
(config)# line vty 0 15
(config-line)# login local
(config-line)# username [username] secret [password]

//adding password for enable mode
(config)# enable secret [password]

//show configuration in the switch
# show running-config

//show ip and mask info
# show interfaces vlan [#]

//show dhcp temporarily leased IP
# show dhcp lease

//show what protocol is used
# show ip protocol

//show cisco discovery protocol
# show cdp neighbros detail

//EXEC command that list the commands currently held in the history buffer.
# show history

//allow a user to set, just for this one login session, the size of the history buffer
# terminal history size [#]

//history size for console or vty line mode
(config-line)# history size [#]

//enable or disable ssh or telnet; cisco is default to none
//must be in the vty line subcommand
(config-line)# transport input [all | none | telnet | ssh]

//list status information of the SSH server
# show ip ssh

//lists information about each SSH Client currently connected to the switch
# show ssh

//Static IP vlan on a switch
//[#] vlan ID #
//you want to exit interface mode because the default gateway ip address is share for all ip 
//not just the ip you created for that interface
//use no shutdown to enable an interface on a switch/ shutodnw to disable an interface
(config)# interface vlan [#]
(config-if)# ip address xx.xx.xx.xx xx.xx.xx.xx
(config-if)# no shutdown
(config-if)# exit
(config)# ip default-gateway xx.xx.xx.xx

//Dynamic IP vlan on a switch
(config)# interface vlan [#]
(config-if)# ip address dhcp
(config-if)# no shutdown

//disable or enable log message (log message will pop up any anytime)
(config)# no logging console
//or
(config)# logging console

//synchronous log message only after the show command
(config)# logging synchronous

//change the time for control timeout
//telnet and SSH default at 5 min of inactivity
(config-line)# exec-timeout [minutes] [seconds]

//disable IOS attempt to resolve the hostname into an IP address
(config)# no ip domain-lookup

//provides a quick status of the interfaces on the router, including their IP address, Layer 2 status, and Layer 3 status.
r#show ip interface brief

//configure RIP on a router (RIP max hop count: 15 | only use on small network)
r(config)# router rip
r(config-router)# version 2
//enables RIP on all interfaces in classful network
r(config-router)# network xx.xx.xx.xx

//no longer automatically advertise a route for the entire Class A|B|C network but instead advertise a route for the subnet
r(config)# router rip
r(config-router)# no auto-summary

//disable the sending of RIP updates out interface Gi|fa[x]/[x]
r(config)# router rip
r(config-router)# passive-interface gi[#]/[#]

//configure an IP DHCP exclude address
r(config)# ip dhcp excluded-address xx.xx.xx.xx
//create IP DHCP pool
r(config)# ip dhcp pool testpool
//configure the server to give out the default router address
r(dhcp-config)# default-router xx.xx.xx.xx
//configure the server to use a lease time 1 hour
r(dhcp-config)# lease 0 1
//config the server to give out all the available addresses
r(dhcp-config)# network xx.xx.xx.xx xx.xx.xx.xx

//configure an IP DHCP with DNS server
r(config)# ip dhcp excluded-address xx.xx.xx.xx
r(config)# ip dhcp pool testpool
r(dhcp-config)# default-router xx.xx.xx.xx
//configure the server to give out a DNS server address
r(dhcp-config)# dns-server xx.xx.xx.xx
//configure the server to give out a domain name testing.com
r(dhcp-config)# domain-name testing.com

//ACL access control list
//# 1-99 for standard ACL use for IP
//permit host ip 10.1.1.1
r(config)# access-list [#] permit 10.1.1.1
//deny 10.1.1.0 - 10.1.1.255 (0.0.0.255: 0 = match; 255 = wild card)
r(config)# access-list [#] deny 10.1.1.0 0.0.0.255
//permit 10.0.0.0 - 10.255.255.255 (0.0.0.255: 0 = match; 255 = wild card)
r(config)# access-list [#] permit 10.0.0.0 0.255.255.255

//ACL access control list
//# 99-199 for extended ACL used for protocol blocking
//deny protocol tcp of port 23 to any IP and submask
r(config)# access-list [#] deny [protocol example tcp] any any eq [port number example 23]
//allow all other traffic
r(config)# access-list [#] permit ip any any
//pick an interface to use the ACL
r(config)# int s0/0/0
r(config-if)# ip access-group # in

//NAT network address translation private ip to public ip
//choosing an interface facing the LAN the private IP
r(config)# interface gi0/0
//setting that interface as the private ip ie nat inside
r(config-if)# ip nat inside
//setting the interface as the public ip for that private ip
r(config-if)# interface s0/0/0
//translating the interface as public
r(config-if)# ip nat outside
//setting the private 10.1.0.2 ip to translate out to public ip 128.107.1.3 (the public up should be in the same subnet)
r(config-if)# ip nat inside source static 10.1.0.2 128.107.1.3
